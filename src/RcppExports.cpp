// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// genotyping_error_model
double genotyping_error_model(const arma::uvec& phenotype, const unsigned& genotype0, const unsigned& genotype1, const unsigned& number_of_alleles, const double& dropout_rate, const double& mistyping_rate);
RcppExport SEXP _sydneyPaternity_genotyping_error_model(SEXP phenotypeSEXP, SEXP genotype0SEXP, SEXP genotype1SEXP, SEXP number_of_allelesSEXP, SEXP dropout_rateSEXP, SEXP mistyping_rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::uvec& >::type phenotype(phenotypeSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type genotype0(genotype0SEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type genotype1(genotype1SEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type number_of_alleles(number_of_allelesSEXP);
    Rcpp::traits::input_parameter< const double& >::type dropout_rate(dropout_rateSEXP);
    Rcpp::traits::input_parameter< const double& >::type mistyping_rate(mistyping_rateSEXP);
    rcpp_result_gen = Rcpp::wrap(genotyping_error_model(phenotype, genotype0, genotype1, number_of_alleles, dropout_rate, mistyping_rate));
    return rcpp_result_gen;
END_RCPP
}
// paternity_loglikelihood_by_locus
double paternity_loglikelihood_by_locus(const arma::uvec& paternity, const arma::umat& offspring_phenotypes, const arma::uvec& maternal_phenotype, const arma::vec& allele_frequencies, const double& dropout_rate, const double& mistyping_rate);
RcppExport SEXP _sydneyPaternity_paternity_loglikelihood_by_locus(SEXP paternitySEXP, SEXP offspring_phenotypesSEXP, SEXP maternal_phenotypeSEXP, SEXP allele_frequenciesSEXP, SEXP dropout_rateSEXP, SEXP mistyping_rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::uvec& >::type paternity(paternitySEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type offspring_phenotypes(offspring_phenotypesSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type maternal_phenotype(maternal_phenotypeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type allele_frequencies(allele_frequenciesSEXP);
    Rcpp::traits::input_parameter< const double& >::type dropout_rate(dropout_rateSEXP);
    Rcpp::traits::input_parameter< const double& >::type mistyping_rate(mistyping_rateSEXP);
    rcpp_result_gen = Rcpp::wrap(paternity_loglikelihood_by_locus(paternity, offspring_phenotypes, maternal_phenotype, allele_frequencies, dropout_rate, mistyping_rate));
    return rcpp_result_gen;
END_RCPP
}
// paternity_loglikelihood
double paternity_loglikelihood(arma::uvec paternity, arma::ucube offspring_phenotypes, arma::umat maternal_phenotype, std::vector<arma::vec> allele_frequencies, arma::vec dropout_rate, arma::vec mistyping_rate);
RcppExport SEXP _sydneyPaternity_paternity_loglikelihood(SEXP paternitySEXP, SEXP offspring_phenotypesSEXP, SEXP maternal_phenotypeSEXP, SEXP allele_frequenciesSEXP, SEXP dropout_rateSEXP, SEXP mistyping_rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type paternity(paternitySEXP);
    Rcpp::traits::input_parameter< arma::ucube >::type offspring_phenotypes(offspring_phenotypesSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type maternal_phenotype(maternal_phenotypeSEXP);
    Rcpp::traits::input_parameter< std::vector<arma::vec> >::type allele_frequencies(allele_frequenciesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dropout_rate(dropout_rateSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mistyping_rate(mistyping_rateSEXP);
    rcpp_result_gen = Rcpp::wrap(paternity_loglikelihood(paternity, offspring_phenotypes, maternal_phenotype, allele_frequencies, dropout_rate, mistyping_rate));
    return rcpp_result_gen;
END_RCPP
}
// recode_to_contiguous_integers
arma::uvec recode_to_contiguous_integers(arma::uvec input);
RcppExport SEXP _sydneyPaternity_recode_to_contiguous_integers(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(recode_to_contiguous_integers(input));
    return rcpp_result_gen;
END_RCPP
}
// optimize_paternity_given_error_rates
Rcpp::List optimize_paternity_given_error_rates(arma::uvec paternity, arma::ucube offspring_phenotypes, arma::umat maternal_phenotype, std::vector<arma::vec> allele_frequencies, arma::vec dropout_rate, arma::vec mistyping_rate);
RcppExport SEXP _sydneyPaternity_optimize_paternity_given_error_rates(SEXP paternitySEXP, SEXP offspring_phenotypesSEXP, SEXP maternal_phenotypeSEXP, SEXP allele_frequenciesSEXP, SEXP dropout_rateSEXP, SEXP mistyping_rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type paternity(paternitySEXP);
    Rcpp::traits::input_parameter< arma::ucube >::type offspring_phenotypes(offspring_phenotypesSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type maternal_phenotype(maternal_phenotypeSEXP);
    Rcpp::traits::input_parameter< std::vector<arma::vec> >::type allele_frequencies(allele_frequenciesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dropout_rate(dropout_rateSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mistyping_rate(mistyping_rateSEXP);
    rcpp_result_gen = Rcpp::wrap(optimize_paternity_given_error_rates(paternity, offspring_phenotypes, maternal_phenotype, allele_frequencies, dropout_rate, mistyping_rate));
    return rcpp_result_gen;
END_RCPP
}
// sample_paternity_given_error_rates
Rcpp::List sample_paternity_given_error_rates(arma::uvec paternity, arma::ucube offspring_phenotypes, arma::umat maternal_phenotype, std::vector<arma::vec> allele_frequencies, arma::vec dropout_rate, arma::vec mistyping_rate, const unsigned max_iter);
RcppExport SEXP _sydneyPaternity_sample_paternity_given_error_rates(SEXP paternitySEXP, SEXP offspring_phenotypesSEXP, SEXP maternal_phenotypeSEXP, SEXP allele_frequenciesSEXP, SEXP dropout_rateSEXP, SEXP mistyping_rateSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type paternity(paternitySEXP);
    Rcpp::traits::input_parameter< arma::ucube >::type offspring_phenotypes(offspring_phenotypesSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type maternal_phenotype(maternal_phenotypeSEXP);
    Rcpp::traits::input_parameter< std::vector<arma::vec> >::type allele_frequencies(allele_frequenciesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dropout_rate(dropout_rateSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mistyping_rate(mistyping_rateSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type max_iter(max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_paternity_given_error_rates(paternity, offspring_phenotypes, maternal_phenotype, allele_frequencies, dropout_rate, mistyping_rate, max_iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sydneyPaternity_genotyping_error_model", (DL_FUNC) &_sydneyPaternity_genotyping_error_model, 6},
    {"_sydneyPaternity_paternity_loglikelihood_by_locus", (DL_FUNC) &_sydneyPaternity_paternity_loglikelihood_by_locus, 6},
    {"_sydneyPaternity_paternity_loglikelihood", (DL_FUNC) &_sydneyPaternity_paternity_loglikelihood, 6},
    {"_sydneyPaternity_recode_to_contiguous_integers", (DL_FUNC) &_sydneyPaternity_recode_to_contiguous_integers, 1},
    {"_sydneyPaternity_optimize_paternity_given_error_rates", (DL_FUNC) &_sydneyPaternity_optimize_paternity_given_error_rates, 6},
    {"_sydneyPaternity_sample_paternity_given_error_rates", (DL_FUNC) &_sydneyPaternity_sample_paternity_given_error_rates, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_sydneyPaternity(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
